---
# Détecte si on est dans un conteneur pour activer unsafe_writes
- name: Detect container
  ansible.builtin.set_fact:
    __in_container: "{{ (ansible_virtualization_type | default('')) in ['docker', 'podman'] }}"

# Construit le corps souhaité (une ligne par entrée)
- name: Build desired body
  ansible.builtin.set_fact:
    __body: |-
      {% for h in etc_hosts | default([]) %}
      {{ h.ip }}  {{ (h.names | default([]) | unique) | join(' ') }}{{ ('  # ' ~ h.comment) if (h.comment is defined and (h.comment|string)|trim) else '' }}
      {% endfor %}

# Normalisation (supprime espaces de fin de ligne, trim global)
- name: Normalize desired body
  ansible.builtin.set_fact:
    __body_norm: "{{ __body | regex_replace('[ \\t]+$', '', multiline=True) | trim }}"

# Gère le bloc /etc/hosts de bout en bout (present/absent) avec marqueurs BEGIN/END
- name: Manage /etc/hosts block
  ansible.builtin.blockinfile:
    path: /etc/hosts
    create: true
    marker: "# ANSIBLE-MANAGED {{ etc_hosts_block_name }} {mark}"
    block: "{{ __body_norm }}"
    state: "{{ etc_hosts_state | default('present') }}"
    backup: "{{ etc_hosts_backup | default(true) }}"
    unsafe_writes: "{{ __in_container }}"
  become: true
