---
# ------------------------------- ABSENT ---------------------------------------

- name: "Kubernetes | Remove packages (absent)"
  become: true
  when: kube_state == 'absent'
  ansible.builtin.apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: absent
    update_cache: true

# ------------------------------- PRESENT --------------------------------------

- name: "Kubernetes | Install (present)"
  become: true
  when: kube_state == 'present'
  block:

    # kube_series doit être un string du type "v1.29", "v1.30", etc.
    - name: Set default kube_series if not provided
      ansible.builtin.set_fact:
        kube_series: "{{ kube_series | default('v1.30') }}"

    - name: Ensure base packages for APT over HTTPS and gpg exist
      ansible.builtin.apt:
        name:
          - ca-certificates
          - gnupg
        state: present
        update_cache: true

    - name: Ensure /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: "Download Kubernetes Release.key for the chosen series (curl)"
      ansible.builtin.command: >
        curl -L --fail --show-error
        -o /etc/apt/keyrings/kubernetes-release.key
        "https://pkgs.k8s.io/core:/stable:/{{ kube_series }}/deb/Release.key"
      args:
        creates: /etc/apt/keyrings/kubernetes-release.key
      become: yes

    - name: Dearmor Release.key into keyring
      ansible.builtin.command:
        cmd: >
          gpg --dearmor
          --yes
          --output /etc/apt/keyrings/kubernetes-archive-keyring.gpg
          /etc/apt/keyrings/kubernetes-release.key
      args:
        creates: /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    # Dépôt pkgs.k8s.io (suite "/" et pas de composant)
    - name: Add Kubernetes APT repository (pkgs.k8s.io)
      ansible.builtin.apt_repository:
        repo: >
          deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg]
          https://pkgs.k8s.io/core:/stable:/{{ kube_series }}/deb/ /
        filename: kubernetes
        state: present
        update_cache: true

    # Installe et pince éventuellement la version exacte si kube_version est définie
    - name: Install kubeadm/kubelet/kubectl
      ansible.builtin.apt:
        name: "{{ item }}{{ ('=' + kube_version) if (kube_version | length > 0) else '' }}"
        state: present
        update_cache: true
        allow_downgrade: true
      loop:
        - kubeadm
        - kubelet
        - kubectl
