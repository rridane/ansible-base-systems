---
dependency:
  name: galaxy

driver:
  name: podman

platforms:
  # Distribution test machines
  - name: ubuntu-20
    image: "docker.io/geerlingguy/docker-ubuntu2004-ansible"
    pre_build_image: true
    privileged: true
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

  - name: ubuntu-22
    image: "docker.io/geerlingguy/docker-ubuntu2204-ansible:latest"
    pre_build_image: true
    privileged: true
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

  - name: debian-12
    image: "docker.io/geerlingguy/docker-debian12-ansible:latest"
    pre_build_image: true
    privileged: true
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

  # Machine sp√©ciale pour tester un cas alternatif
  - name: ubuntu-22-version-32
    image: "docker.io/geerlingguy/docker-ubuntu2204-ansible:latest"
    pre_build_image: true
    privileged: true
    command: /lib/systemd/systemd
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

provisioner:
  name: ansible
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
  config_options:
    defaults:
      callbacks_enabled: profile_tasks, timer
  inventory:
    group_vars:
      all:
        proxy_state: present
        http_proxy: "monproxy.monproxy.org"
        no_proxy_list:
          - "127.0.0.1"
          - "localhost"
          - ".svc"
          - ".cluster.local"
        apt_proxy_file: /etc/apt/apt.conf.d/99-proxy.conf
        environment_file: /etc/environment
        environment_block_name: ansible_managed_proxy
        systemd_dropin_dir: /etc/systemd/system.conf.d
        systemd_dropin_file: 10-proxy.conf
    host_vars:
      ubuntu-22-version-32:
  env:
    ANSIBLE_ROLES_PATH: "${MOLECULE_PROJECT_DIRECTORY}/.."

verifier:
  name: testinfra
  directory: ./tests
  options:
    verbose: true

scenario:
  name: default
